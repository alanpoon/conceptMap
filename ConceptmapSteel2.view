<<<<<<<=view-json=
{
  "id":"ConceptmapSteel2",
  "name":"ConceptmapSteel2",
  "category":"Chart",
  "default":{
    "jsonClass":"View",
    "elxType":"View",
    "vtype":"bundle",
    "state":"visible",
    "isContainer":false,
    "position":{
      "jsonClass":"Position",
      "elxType":"Position",
      "height":"600",
      "width":"600",
      "zIndex":"auto"
    },
    "data":{
      "jsonClass":"DataEmbedded",
      "datasource":{
        "jsonClass":"DataSource",
        "name":"initData",
        "stype":"Data",
        "desc":"default data",
        "schema":{
          "jsonClass":"Schema",
          "caseSensitive":false,
          "columns":[{
            "jsonClass":"SchemaColumn",
            "name":"TRANSIT_STN",
            "dtype":"String",
            "attrs":[]
          },{
            "jsonClass":"SchemaColumn",
            "name":"FIN_STN",
            "dtype":"String",
            "attrs":[]
          },{
            "jsonClass":"SchemaColumn",
            "name":"FIN_STN_TYPE",
            "dtype":"String",
            "attrs":[]
          },{
            "jsonClass":"SchemaColumn",
            "name":"TICKET_TOTAL",
            "dtype":"Double",
            "attrs":[]
          }]
        },
        "data":{
          "jsonClass":"DataRecords",
          "records":[{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type5"
            },{
              "jsonClass":"Field",
              "value":"Supplier1"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type1"
            },{
              "jsonClass":"Field",
              "value":"Supplier1"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type4"
            },{
              "jsonClass":"Field",
              "value":"Supplier4"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type5"
            },{
              "jsonClass":"Field",
              "value":"Supplier1"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":1
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type5"
            },{
              "jsonClass":"Field",
              "value":"Supplier4"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type1"
            },{
              "jsonClass":"Field",
              "value":"Supplier2"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":3
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type3"
            },{
              "jsonClass":"Field",
              "value":"Supplier4"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type3"
            },{
              "jsonClass":"Field",
              "value":"Supplier3"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type5"
            },{
              "jsonClass":"Field",
              "value":"Supplier5"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":3
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type1"
            },{
              "jsonClass":"Field",
              "value":"Supplier1"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":1
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type1"
            },{
              "jsonClass":"Field",
              "value":"Supplier2"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type1"
            },{
              "jsonClass":"Field",
              "value":"Supplier5"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":3
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type1"
            },{
              "jsonClass":"Field",
              "value":"Supplier2"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type3"
            },{
              "jsonClass":"Field",
              "value":"Supplier3"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type2"
            },{
              "jsonClass":"Field",
              "value":"Supplier2"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":3
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type1"
            },{
              "jsonClass":"Field",
              "value":"Supplier3"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":3
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type2"
            },{
              "jsonClass":"Field",
              "value":"Supplier1"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":3
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type5"
            },{
              "jsonClass":"Field",
              "value":"Supplier5"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type5"
            },{
              "jsonClass":"Field",
              "value":"Supplier5"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":1
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type3"
            },{
              "jsonClass":"Field",
              "value":"Supplier1"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type3"
            },{
              "jsonClass":"Field",
              "value":"Supplier3"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":3
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type4"
            },{
              "jsonClass":"Field",
              "value":"Supplier3"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type5"
            },{
              "jsonClass":"Field",
              "value":"Supplier5"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":1
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type1"
            },{
              "jsonClass":"Field",
              "value":"Supplier4"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type3"
            },{
              "jsonClass":"Field",
              "value":"Supplier1"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":3
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type1"
            },{
              "jsonClass":"Field",
              "value":"Supplier1"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type1"
            },{
              "jsonClass":"Field",
              "value":"Supplier2"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":2
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type4"
            },{
              "jsonClass":"Field",
              "value":"Supplier1"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":3
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type4"
            },{
              "jsonClass":"Field",
              "value":"Supplier2"
            },{
              "jsonClass":"Field",
              "value":"Local"
            },{
              "jsonClass":"Field",
              "value":3
            }]
          },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
              "value":"Steel_Type1"
            },{
              "jsonClass":"Field",
              "value":"Supplier4"
            },{
              "jsonClass":"Field",
              "value":"Foreign"
            },{
              "jsonClass":"Field",
              "value":3
            }]
          }]
        }
      },"hint":"directive-data-array",
      "directive":"IGZ1bmN0aW9uIGRhdGEoKXsNCiAgdmFyIHVuaVRhYmxlID0gdmlldy5kYXRhLmZpZWxkc1swXS50YWJsZSArICIuIjsNCiAgIA0KICB2YXIgdHJhbnNpdFN0bkNvbD12aWV3LnR5cGVpbmZvLmRhdGEuZmllbGRzLnRyYW5zaXRTdG5Db2w7DQogICAgdmFyIGZpblN0bkNvbD12aWV3LnR5cGVpbmZvLmRhdGEuZmllbGRzLmZpblN0bkNvbDsNCiAgdmFyIGZpblN0blR5cGVDb2w9dmlldy50eXBlaW5mby5kYXRhLmZpZWxkcy5maW5TdG5UeXBlQ29sOw0KICB2YXIgdD12aWV3LnR5cGVpbmZvLmRhdGEuZmllbGRzLm9wZXJhYmxlLnZhbHVlczsgDQogDQogIHZhciBjb2x1bW5zPVtdOyB2YXIgb3BlcmF0aW9ucz1bXTsgdmFyIGtleXM9W107DQogDQoJdHJhbnNpdFN0bkNvbC5mb3JFYWNoKGZ1bmN0aW9uKGQsaSkgew0KICBrZXlzLnB1c2goZC5uYW1lKTsNCiAgICAgfSkNCg0KICAgICBmaW5TdG5Db2wuZm9yRWFjaChmdW5jdGlvbihkLGkpIHsNCiAga2V5cy5wdXNoKGQubmFtZSk7DQogICAgfSkNCiAJZmluU3RuVHlwZUNvbC5mb3JFYWNoKGZ1bmN0aW9uKGQsaSkgew0KICBrZXlzLnB1c2goZC5uYW1lKTsNCiAgICB9KQ0KICAgICANCiAgICB0LmZvckVhY2goZnVuY3Rpb24oZCxpKSB7DQogIGNvbHVtbnMucHVzaChkLm5hbWUpOw0KICAgIG9wZXJhdGlvbnMucHVzaChkLm9wKTsNCiAgfSkNCiANCiAgICAgcmV0dXJuIHJvd3MuZ3JvdXBCeShrZXlzLGNvbHVtbnMsb3BlcmF0aW9ucyk7DQp9DQpkYXRhKCk7"
    },
    "typeinfo":{
      "jsonClass":"Bundle",
      "type":"ConceptmapSteel2",
      "data":{
         "series":{
          "sort":"series-asc"
        },
        "keys":{
          "sort":"key-asc"
        },
        "fields":{
          "transitStnCol":[{"name":"TRANSIT_STN","id":"|"}],
          "finStnCol":[{"name":"FIN_STN","id":"|"}],
          "finStnTypeCol":[{"name":"FIN_STN_TYPE","id":"|"}],
          "operable":{
            "values":[
              {
                "id":"Size",
                "name":"TICKET_TOTAL",
                "op":"sum"
              }
                ,{"id":"Quantity",
              "name":"June",
              "op":"sum"}
            ]
          }
        }
       
      },
      "height":"800",
      "width":"800",
      "themeName":"Local,Local",
      "perspectiveName":"Foreign,Foreign",
      "episodeName":"SteelType,SteelType",
      "entityName":"Tonnage: ,Quantity: ",
      "prefixMagnitude":"1000",
      "formatValue":"formatValue=function(value) {return ' '+d3.round(prefix.scale(value),2)+prefix.symbol;}"
    }
  },
  "includes":["/elx/lib/conceptmapOriginalJSmatch.js"],
  "edit-section":[{
    "id":"view",
    "name":"View"
  },{
    "id":"actionbar",
    "name":"Actionbar"
  },{
    "id":"data",
    "name":"Data"
  },{
    "id":"ConceptmapSteel2",
    "name":"ConceptmapSteel2"
  },{
    "id":"filters",
    "name":"Filters"
  }]
}
========
<<<<<<<=edit-json=
{
  "jsonClass":"ViewSection",
  "id":"ConceptmapSteel2",
  "rows":[{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-property-label",
      "type":"label",
      "text":"Chart Height"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-height",
      "type":"field",
      "value":"${typeinfo.height}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-property-label",
      "type":"label",
      "text":"Chart Width"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-width",
      "type":"field",
      "value":"${typeinfo.width}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-transitStnCol-label",
      "type":"label",
      "text":"Steel Type"
    },{
      "jsonClass":"SchemaColumnSelect",
      "id":"typeinfo-transitStnCol",
      "type":"select-schema-column",
      "value":"${typeinfo.transitStnCol}"
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-finStnCol-label",
      "type":"label",
      "text":"Supplier"
    },{
      "jsonClass":"SchemaColumnSelect",
      "id":"typeinfo-finStnCol",
      "type":"select-schema-column",
      "value":"${typeinfo.finStnCol}"
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-finStnTypeCol-label",
      "type":"label",
      "text":"Location"
    },{
      "jsonClass":"SchemaColumnSelect",
      "id":"typeinfo-finStnTypeCol",
      "type":"select-schema-column",
      "value":"${typeinfo.finStnTypeCol}"
    }]
  },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-data-fields-operable-values-label",
        "type":"label",
        "text":"Column"
      },{
        "jsonClass":"Div",
        "id":"typeinfo-data-fields-operable-values"
      }]
    },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-themeName-label",
      "type":"label",
      "text":"Theme Name"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-themeName",
      "type":"field",
      "value":"${typeinfo.themeName}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-perspectiveName-label",
      "type":"label",
      "text":"Perspective Name"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-perspectiveName",
      "type":"field",
      "value":"${typeinfo.perspectiveName}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-episodeName-label",
      "type":"label",
      "text":"Episode Name"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-episodeName",
      "type":"field",
      "value":"${typeinfo.episodeName}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-entityName-label",
      "type":"label",
      "text":"Entity Name"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-entityName",
      "type":"field",
      "value":"${typeinfo.entityName}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-prefixMagnitude-label",
      "type":"label",
      "text":"Prefix Magnitude"
    },{
      "jsonClass":"Select",
      "id":"typeinfo-prefixMagnitude",
      "type":"select",
      "value":"${typeinfo.prefixMagnitude}",
      "options":[{
        "jsonClass":"Option",
        "text":"thousand",
        "value":"1000"
      },{
        "jsonClass":"Option",
        "text":"million",
        "value":"1000000"
      }]
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-formatValue-label",
      "type":"label",
      "text":"Format Value"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-formatValue",
      "type":"field",
      "value":"${typeinfo.formatValue}",
      "readonly":false
    }]
  }]
}
========
<<<<<<<=edit-js=
elx.bundle.type.ConceptmapSteel2 = {

  	init : function(view) {
	
      $("#typeinfo-transitStnCol").val(view.typeinfo.data.fields.transitStnCol[0].name);
        $("#typeinfo-finStnCol").val(view.typeinfo.data.fields.finStnCol[0].name);
      $("#typeinfo-finStnTypeCol").val(view.typeinfo.data.fields.finStnTypeCol[0].name);
        var dataOps =  elx.utils.getElxChartOperablesData(view, view.typeinfo.data.fields.operable.values);
   		var tableOp = new elx.MultiChartValueColumnSection("typeinfo-data-fields-operable-values-table",
                                                        "typeinfo-data-fields-operable-values", view, dataOps);
		$("#typeinfo-data-fields-operable-values-table").data("table",tableOp);
   
       elx.host.utils.initSectionGroups(view,$("#ConceptmapSteel2-div"));
	},

	validate : function(view) {
		return true;
	},

	save : function(view) {
	
      var dTransitStn = $("#typeinfo-transitStnCol").val();
		view.typeinfo.data.fields.transitStnCol[0].name =dTransitStn;
      	var dFinStn = $("#typeinfo-finStnCol").val();
		view.typeinfo.data.fields.finStnCol[0].name = dFinStn;
      	var dFinStnType = $("#typeinfo-finStnTypeCol").val();
		view.typeinfo.data.fields.finStnTypeCol[0].name = dFinStnType;
     	var dataTableOp = $("#typeinfo-data-fields-operable-values-table").data("table");
       var dataOp = dataTableOp.table.getData();
          view.typeinfo.data.fields.operable.values = 
          elx.utils.buildElxChartOperablesData(view.typeinfo.data.fields.operable.values,dataOp);
      
      elx.host.utils.saveProperties(view.typeinfo);
	}
};
========
<<<<<<<=view-html=
<style>
svg{font-family:Abel,"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:15px}.episode > rect{stroke:#fff;stroke-width:1.5px}
.link{fill:none}.episode,.node,.detail text,.all-episodes{cursor:pointer}.all-episodes{fill:#aaa}.detail a text:hover,text.all-episodes:hover{text-decoration:underline}
#graph-info{position:absolute;width:140px;right:0;bottom:0;padding-bottom:10px}.maptastic{position:absolute!important;left:-10000px!important;display:block!important}@font-face{font-family:'Abel';font-style:normal;font-weight:400;src:local(Abel),local(Abel-Regular),url(http://themes.googleusercontent.com/static/fonts/abel/v3/EAqh528fFdbUek8UOky4sA.woff) format("woff")}
</style>
  <div class="header_${id}">
</div>
<div id='${id}'></div>	
<div class='elx-script'>
    /* data tab
   
  function data(){
  var uniTable = view.data.fields[0].table + ".";
   
  var transitStnCol=view.typeinfo.data.fields.transitStnCol;
    var finStnCol=view.typeinfo.data.fields.finStnCol;
  var finStnTypeCol=view.typeinfo.data.fields.finStnTypeCol;
  var t=view.typeinfo.data.fields.operable.values; 
 
  var columns=[]; var operations=[]; var keys=[];
 
	transitStnCol.forEach(function(d,i) {
  keys.push(d.name);
     })

     finStnCol.forEach(function(d,i) {
  keys.push(d.name);
    })
 	finStnTypeCol.forEach(function(d,i) {
  keys.push(d.name);
    })
     
    t.forEach(function(d,i) {
  columns.push(d.name);
    operations.push(d.op);
  })
 
     return rows.groupBy(keys,columns,operations);
}
data();
  */
  
	var div = $("#${id}");
	var view = elx.host.getViewById("${id}");
	var viewId=view.id;
 console.log("id: ",'${id}',"view: ",view);

 
  if (view.data.jsonClass === "DataEmbedded"){
  var rawData=[["Steel_Type1","Supplier1","Local",5,60],["Steel_Type1","Supplier2","Local",9,50],["Steel_Type1","Supplier3","Foreign",3,20],["Steel_Type1","Supplier4","Foreign",5,40],["Steel_Type1","Supplier5","Foreign",3,20],["Steel_Type2","Supplier1","Local",3,10],["Steel_Type2","Supplier2","Local",3,10],["Steel_Type3","Supplier1","Local",5,30],["Steel_Type3","Supplier3","Foreign",7,50],["Steel_Type3","Supplier4","Foreign",2,10],["Steel_Type4","Supplier1","Local",3,20],["Steel_Type4","Supplier2","Local",3,10],["Steel_Type4","Supplier3","Foreign",2,20],["Steel_Type4","Supplier4","Foreign",2,10],["Steel_Type5","Supplier1","Local",3,30],["Steel_Type5","Supplier4","Foreign",2,10],["Steel_Type5","Supplier5","Foreign",7,50]];
  } else var rawData=${code};
 console.log("rawData",JSON.stringify(rawData));
 
  console.log("view view",JSON.stringify(view));
  var f=view.typeinfo.data.fields;
  var arrToHex,getArr,cutTableName,hexToModel,selectBoxFn,buildConceptMapData;
   var ticketTotal={};
  debugFn();
  
  var data1=arrToHex(rawData,f,view);
  var data2=hexToModel(data1);
  console.log("before data1",JSON.stringify(data1));
  console.log("before data2",JSON.stringify(data2));
  selectBoxFn(data2[0].ContentInfo);
    var contentSize=_.size(data2[0].ContentInfo);
  formatTicketTotal(contentSize,ticketTotal);
   var maxCount = 0;
var minCount = 10000;
var themeNameArr = (view.typeinfo.themeName).split(",");
var episodeNameArr = (view.typeinfo.episodeName).split(",");
var perspectiveNameArr = (view.typeinfo.perspectiveName).split(",");
var entityNameArr=(view.typeinfo.entityName).split(",");
var selectionBox="content#1";
var selectionNumIndex=parseInt(selectionBox.split("#")[1])-1;
var conceptmapData=buildConceptMapData(selectionBox,data2);

 var directoryType={"episode":view.typeinfo.data.transitStnCol,
  "perspective":view.typeinfo.data.finStnCol,"theme":view.typeinfo.data.finStnCol};
  var prefix=d3.formatPrefix(view.typeinfo.prefixMagnitude);
  var formatValue;
  eval(view.typeinfo.formatValue);
  console.log("directoryType",JSON.stringify(directoryType));
  
  conceptMap("#${id}", conceptmapData, {
    themeColor: "white",
    showConnector: false,
    width: view.typeinfo.width,
    height: view.typeinfo.height,
    centerCircleRadius: 60,
    maxCount: maxCount,
    minCount: minCount,
    themeName: themeNameArr[selectionNumIndex],
    episodeName: episodeNameArr[selectionNumIndex],
    perspectiveName: perspectiveNameArr[selectionNumIndex],
  entityName: entityNameArr[selectionNumIndex],
    zLimit: 50,
  directoryType:directoryType,
  formatPrefix:prefix,
  formatValue:formatValue
});
    
	 d3.selectAll(".header_"+viewId+" select").on("change", function() {
  selectionBox=this.value;
  selectionNumIndex=parseInt(selectionBox.split("#")[1])-1;
  console.log("this.value",this.value);
  conceptmapData=buildConceptMapData(this.value,data2);
  d3.select("#${id}").selectAll("*").remove();
	conceptMap("#${id}", conceptmapData, { 
    themeColor: "white",
    showConnector: false,
    width: view.typeinfo.width,
    height: view.typeinfo.height,
    centerCircleRadius: 60,
    maxCount: maxCount,
    minCount: minCount,
    themeName: themeNameArr[selectionNumIndex],
    episodeName: episodeNameArr[selectionNumIndex],
    perspectiveName: perspectiveNameArr[selectionNumIndex],
  entityName: entityNameArr[selectionNumIndex],
    zLimit: 50,
  directoryType:directoryType,
  formatPrefix:prefix,
  formatValue:formatValue
	});
});
  	elx.host.setupAutoResize(div, function(w,h){
  		
  		if(w !== view.typeinfo.width || h != view.typeinfo.height){
  			view.typeinfo.height = h;
  			view.typeinfo.width = w;
  			
  			$("#${id}").empty();
  			conceptMap("#${id}", conceptmapData, {themeColor: "white", showConnector: false, width: w, 
  height: h, centerCircleRadius: 60, maxCount: maxCount, minCount: minCount, themeName: themeNameArr[selectionNumIndex],
    episodeName: episodeNameArr[selectionNumIndex],
    perspectiveName: perspectiveNameArr[selectionNumIndex],entityName: entityNameArr[selectionNumIndex],
    zLimit: 50, directoryType:directoryType, formatPrefix:prefix,
  formatValue:formatValue});	
    
  		}
    });
  function debugFn(){
   arrToHex =function(data, f, view) { //used together with operations
 	
    var nameArr = getArr(f, 'name', view);
    console.log("nameArr", nameArr);
    var idArr = getArr(f, 'id', view);
    console.log("idArr:", JSON.stringify(idArr));
    var processedIdArr = [];
  	var keyIdArr=[];
	
    _.each(idArr, function(d, i) {
	  if (d.contains("#{") == true || d.contains("|") == true) {
            processedIdArr.push(d);
  } else  {

  processedIdArr.push("#[" + d + "]"); //for contents

  }
    });
    var combineArr = [];
    processedIdArr.forEach(function(d, i) {

        if (i === 0) {
            var obj = 'TRANSIT_STN' + d;
        } else if (i === 1) {
            var obj = 'FIN_STN' + d;
        }   else if (i === 2) {
            var obj = 'FIN_STN_TYPE' + d;
          }  
  
    else if (i> 2) { var obj = nameArr[i] + d;
    }
        combineArr.push(obj);
    })
    var globalArr = [];
    data.forEach(function(d, i) {
        var localObj = _.object(combineArr, d);
        globalArr.push(localObj);
    })
    return globalArr;

};
  getArr=function(obj, k, view) { //used on view.typeinfo to get an array of property value of the propertyName 'name'
    var objects = [];
    for (var i in obj) {
        if (!obj.hasOwnProperty(i)) continue;
        if (typeof obj[i] == 'object') {
            objects = objects.concat(getArr(obj[i], k, view));
        } else if (i.contains(k) == true) {
            if (k == "name") {
                objects.push(cutTableName(obj[i], view));
            } else
                objects.push(obj[i]);
        }
    }
    return objects;
};
    cutTableName=function(stringText, view) {

    var uniTable = (view.data.jsonClass === "DataAdhocTable") ? view.data.fields[0].table + "." : null;
    var colm = (uniTable == null) ? stringText : stringText.split(uniTable)[1];
    return colm;
};
  hexToModel=function(data) {
    var ReadArray, columnNameArray, model_keyArray, objKey;
    ReadArray = [];
    objKey = Object.keys(data[0]);
  var model_keyArray=[];
  var contentInfoArray=[];
  var contentColumnArray=[];
  var levelInfoArray=[];
  var levelColumnArray=[];
     objKey.forEach(function(key) {
        var columnNameObj, model_keyObj;
  if (key.contains("#[") === true) { // belongs to content
            model_keyObj = key.replace(/.*\[|\]/g, "");
            columnNameObj = key.replace(/\#.*/, "");
 			contentInfoArray.push(model_keyObj);
  			contentColumnArray.push(columnNameObj);
  } 
      
    });

    data.forEach(function(d, i) {
       var  Model, ReadObj, Value,  propertyName;
  		var contentArr=[];
   		
        ReadObj = {};
   		     
  if(i===0) console.log("d!!",JSON.stringify(d));
        for (propertyName in d) {
            
       if (propertyName.contains("#[") === true) {
	   
                  contentArr.push(d[propertyName]);
				            }
        }
            var objPush;
            for (propertyName in d) {
                        objPush = {
                        TRANSIT_STN: d['TRANSIT_STN|'],
 					    FIN_STN:d['FIN_STN|'],
                        FIN_STN_TYPE:d['FIN_STN_TYPE|'],
  						ContentInfo:[]
                    };
                    _.each(contentArr,function(d, i) {
                        propertyName = "content#" + (i + 1);
                        objPush[propertyName] = d;
 					 var contentObj={'id':contentInfoArray[i],'columnName':contentColumnArray[i]};
  						objPush['ContentInfo'].push(contentObj);
                    });
                       
                
            }
  			ReadArray.push(objPush);
        
    });
    return ReadArray;
};
	selectBoxFn=function(contentInfo) {
  //d3 append into 'header' selection 
  var selectBox=d3.select(".header_"+viewId).append("select").attr("class","select_"+viewId);
  _.each(contentInfo,function(m,n){
  selectBox.append("option").attr("value","content#"+(n+1)).html(m.id);
  });
};
formatTicketTotal=function(contentSize,ticketTotal){
 //assign contentValues to ticketTotal class
_.each(_.range(1,contentSize+1),function(m,n){
ticketTotal['content#'+m]=function(d) {

return parseFloat(d['content#'+m]);};
});
};
buildConceptMapData=function(selectionBox,data2){
var tmp = _.groupBy(data2, function(d) {

    return d['FIN_STN'];
});

  
var tmp2 = {};
_.each(tmp, function(t, unit) {
    tmp2[unit] = _.groupBy(t, function(d) {
        return d['TRANSIT_STN'];
    });
});
// check the number of elements in ContentInfo


var aggregated = [];
_.each(tmp2, function(t, unit) {
    _.each(t, function(items, currency) {
        var contentObj = {};
		_.each(_.range(1,contentSize+1),function(m,n){
		contentObj[m]=0;
		});
        _.each(items, function(item) {

            finstntype = item['FIN_STN_TYPE'];
           	_.each(_.range(1,contentSize+1),function(m,n){
			contentObj[m]=contentObj[m]+item['content#'+m];
			});
        });
		var pushObj={
            "TRANSIT_STN": currency,
            "FIN_STN": unit,
            "FIN_STN_TYPE": finstntype
           
        };
       	_.each(_.range(1,contentSize+1),function(m,n){
			pushObj['content#'+m]=contentObj[m];
			});
		aggregated.push(pushObj);
    });
});

var nested = d3.nest()
    .key(function(d) {
        return d.FIN_STN;
    })
    .key(function(d) {
        return d.TRANSIT_STN;
    })
    .key(function(d) {
        return d.FIN_STN_TYPE;
    })
    .entries(aggregated);

var nested2 = d3.nest()
    .key(function(d) {
        return d.TRANSIT_STN;
    })
    .key(function(d) {
        return d.FIN_STN;
    })
    .key(function(d) {
        return d.FIN_STN_TYPE;
    })
    .entries(aggregated);

var conceptmapData = {
    episodes: [],
    themes: [],
    perspectives: []
};
var stationsOut = [];
var episodeOut = [];
var uniqueOut = [];

  //console.log("nested2: ", JSON.stringify(nested2));


nested2.forEach(function(xnm, i) {
    //new 
    var episode = {
        type: "episode",
        name: xnm.key,
        episode: i + 1,
        cardTypes: [],
  		slug: "",
        date: new Date(),
        links: []
    };
    var count = 0;
    var countMeArr = [];
    var oldObj = {};
    xnm.values.forEach(function(e) {

        var toCardMeObj = {};
        toCardMeObj[e.key] = ticketTotal[selectionBox](e.values[0].values[0]);
        newObj = _.extend(oldObj, toCardMeObj);
        oldObj = newObj;
        count += ticketTotal[selectionBox](e.values[0].values[0]);
        if (count >= maxCount) maxCount = count;
        if (count <= minCount) minCount = count;
    })

    countMeArr.push(newObj);

    xnm.values[0].values.forEach(function(stationOut) {
            episode.cardTypes.push({
                cardType: stationOut.key,
                count: count,
                countMe: countMeArr
            });
            episode.count = count;
        })
        //
    xnm.values.forEach(function(lnm) {
        episode.links.push(lnm.key);
    })

    conceptmapData.episodes.push(episode);
})
nested.forEach(function(stationIn, i) {
    // console.log("stationIn: ",stationIn);
    var count = 0;
    var countMeArr = [];
    var oldObj = {};
    stationIn.values.forEach(function(e) {
        var toCardMeObj = {};
        toCardMeObj[e.key] = ticketTotal[selectionBox](e.values[0].values[0]);
        newObj = _.extend(oldObj, toCardMeObj);
        oldObj = newObj;
        count += ticketTotal[selectionBox](e.values[0].values[0]);
        if (count >= maxCount) maxCount = count;
        if (count <= minCount) minCount = count;
    });
    countMeArr.push(newObj);
    stationIn.values[0].values.forEach(function(stationOut) {
        stationOut.cardTypes = [];

        stationOut.cardTypes.push({
            cardType: stationOut.key,
            count: count,
            countMe: countMeArr
        });
        stationsOut.push(stationOut);
    })
});
//console.log("stationsOut#",JSON.stringify(stationsOut));
toThemesArr = [];
toPerspectiveArr = [];
stationsOut.forEach(function(d, i) {

    //console.log("d.key: ",d.key);
    if (d.key == 'Local') {
        toThemesArr.push(d);
    } else toPerspectiveArr.push(d);
})

toThemesArr.forEach(function(d) {
    //	console.log("theme count",d);
    var theme = {
        type: "theme",
        name: d.values[0].FIN_STN,
        cardTypes: d.cardTypes,
        count: ticketTotal[selectionBox](d.values[0]),
        slug: ""
    };
    conceptmapData.themes.push(theme);
});

toPerspectiveArr.forEach(function(d, i) {

    var perspective = {
        type: "perspective",
        name: d.values[0].FIN_STN,
        slug: "",
        count: ticketTotal[selectionBox](d.values[0]),
        cardTypes: d.cardTypes,
        //group: (i%2==0?i+1:i)
        group: 0
    };
    conceptmapData.perspectives.push(perspective);
});
return conceptmapData;
};
  }
</div>
========